<%- include('../partials/user/header') %>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" />
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap" rel="stylesheet">

<style>
  :root {
    --primary-green: #2e7d32;
    --dark-green: #1b5e20;
    --accent-gold: #a68c5e;
    --accent-yellow: #8B8000;
    --error-red: #ff0000;
    --out-of-stock-red: #a94442;
    --bg-light: #fff6eb;
    --bg-gray: #f5f7fa;
    --text-dark: #030a17c4;
    --text-muted: #666666;
    --border-gray: #e4e4e4;
  }

  * {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    font-family: 'Poppins', sans-serif;
  }

  .product-page {
    max-width: 1200px;
    margin: 2rem auto;
    padding: 2rem;
    background: var(--bg-light);
    border-radius: 12px;
    box-shadow: 0 4px 20px var(--border-gray);
  }

  .breadcrumb-links {
    font-size: 0.875rem;
    color: var(--text-muted);
    margin-bottom: 1.5rem;
  }

  .breadcrumb-links a {
    color: var(--text-dark);
    text-decoration: none;
    transition: color 0.3s;
  }

  .breadcrumb-links a:hover {
    color: var(--primary-green);
  }

  .product-container {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 2rem;
    align-items: start;
    max-width: 100%;
  }

  .product-gallery {
    position: sticky;
    top: 2rem;
  }

  .main-image {
    position: relative;
    overflow: hidden;
    border-radius: 12px;
    border: 2px solid var(--accent-gold);
    aspect-ratio: 1 / 1;
    width: 100%;
  }

  .main-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .main-image:hover img {
    transform: scale(1.1);
  }

  .thumbnails {
    display: flex;
    gap: 0.75rem;
    margin-top: 1rem;
    justify-content: center;
    flex-wrap: wrap;
  }

  .thumbnail {
    cursor: pointer;
    border-radius: 8px;
    overflow: hidden;
    border: 1px solid transparent;
    transition: border-color 0.3s;
  }

  .thumbnail img {
    width: 70px;
    height: 70px;
    object-fit: cover;
  }

  .thumbnail.active, .thumbnail:hover {
    border-color: var(--accent-gold);
  }

  .product-info {
    padding: 1.5rem;
    background: #ffffff;
    border-radius: 12px;
    box-shadow: 0 2px 10px var(--border-gray);
  }

  .product-title {
    font-size: 1.75rem;
    font-weight: 600;
    color: var(--accent-yellow);
    margin-bottom: 0.75rem;
  }

  .product-description {
    font-size: 1rem;
    color: var(--text-muted);
    line-height: 1.6;
    margin-bottom: 1.5rem;
  }

  .product-specs {
    display: grid;
    gap: 0.5rem;
    margin-bottom: 1.5rem;
  }

  .product-specs div {
    font-size: 0.95rem;
    color: var(--text-dark);
  }

  .product-specs span {
    color: var(--text-muted);
  }

  .rating {
    margin-bottom: 1rem;
    color: var(--accent-gold);
    font-size: 1.1rem;
  }

  .price-container {
    display: flex;
    align-items: baseline;
    gap: 0.75rem;
    margin-bottom: 0.5rem;
  }

  .price-sale {
    font-size: 1.5rem;
    font-weight: 600;
    color: var(--text-dark);
    font-family: "Open Sans", Arial, sans-serif;
  }

  .price-original {
    font-size: 1.1rem;
    color: var(--text-muted);
  }

  .price-original del {
    text-decoration: line-through;
    text-decoration-thickness: 2px;
    font-family: "Open Sans", Arial, sans-serif;
  }

  .offer-text {
    font-size: 0.95rem;
    color: var(--error-red);
    margin-bottom: 1rem;
  }

  .stock-status {
    font-size: 1rem;
    font-weight: 500;
    margin-bottom: 1.5rem;
  }

  .in-stock {
    color: var(--primary-green);
  }

  .out-of-stock {
    color: var(--out-of-stock-red);
  }

  .buttons {
    display: flex;
    gap: 1rem;
    margin-bottom: 2rem;
  }

  .add-to-cart, .wishlist {
    padding: 0.75rem 1.5rem;
    font-size: 1rem;
    font-weight: 500;
    border-radius: 50px;
    cursor: pointer;
    transition: all 0.3s;
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .add-to-cart {
    background: var(--dark-green);
    color: #ffffff;
    border: none;
  }

  .add-to-cart:hover:not(:disabled) {
    background: var(--primary-green);
    transform: translateY(-2px);
  }

  .add-to-cart:disabled {
    background: #6c757d;
    cursor: not-allowed;
  }

  .wishlist {
    background: transparent;
    border: 2px solid var(--dark-green);
    color: var(--dark-green);
  }

  .wishlist:hover {
    background: var(--dark-green);
    color: #ffffff;
    transform: translateY(-2px);
  }

  .reviews {
    margin-top: 2rem;
    padding-top: 1.5rem;
    border-top: 1px solid var(--border-gray);
  }

  .reviews h3 {
    font-size: 1.25rem;
    color: var(--accent-yellow);
    margin-bottom: 1rem;
  }

  .review {
    padding: 1rem;
    background: var(--bg-gray);
    border-radius: 8px;
    margin-bottom: 1rem;
  }

  .review strong {
    color: var(--text-dark);
    font-weight: 500;
  }

  .review p {
    color: var(--text-muted);
    font-size: 0.95rem;
    margin-top: 0.5rem;
  }

  .related-product-area {
    background: var(--bg-gray);
    padding: 3rem 1rem;
  }

  .related-title {
    font-size: 2rem;
    font-weight: 600;
    color: var(--text-dark);
    text-align: center;
    margin-bottom: 1rem;
  }

  .related-subtitle {
    font-size: 1rem;
    color: var(--text-muted);
    text-align: center;
    margin-bottom: 2rem;
    max-width: 600px;
    margin-left: auto;
    margin-right: auto;
  }

  .row {
    display: flex;
    flex-wrap: wrap;
    margin: 0 -15px;
  }

  .col-sm-6 {
    flex: 0 0 50%;
    padding: 0 15px;
  }

  .col-md-4 {
    flex: 0 0 33.333%;
    padding: 0 15px;
  }

  .col-lg-3 {
    flex: 0 0 25%;
    padding: 0 15px;
  }

  .product.card {
    border: none;
    transition: transform 0.3s;
    background: #ffffff;
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 2px 10px var(--border-gray);
  }

  .product.card:hover {
    transform: translateY(-5px);
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
  }

  .product .card-img-top {
    aspect-ratio: 1/1;
    object-fit: cover;
    width: 100%;
  }

  .product .offer-badge {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    background: rgba(128, 128, 128, 0.5);
    color: white;
    font-weight: bold;
    font-size: 16px;
    padding: 8px;
    text-align: center;
    z-index: 10;
  }

  .product .status.badge.out-of-stock {
    color: var(--out-of-stock-red);
    background-color: rgba(255, 255, 255, 0.8);
    padding: 5px 10px;
    font-size: 12px;
    position: absolute;
    top: 10px;
    right: 10px;
  }

  .product .card-body {
    padding: 1.5rem;
    display: flex;
    flex-direction: column;
  }

  .product .cat {
    font-size: 0.85rem;
    color: var(--text-muted);
    margin-bottom: 0.5rem;
  }

  .product .card-title {
    font-size: 1.1rem;
    margin-bottom: 0.5rem;
    min-height: 3rem;
    color: var(--accent-yellow);
  }

  .product .card-title a {
    color: var(--accent-yellow);
    text-decoration: none;
  }

  .product .card-title a:hover {
    color: var(--primary-green);
  }

  .product .pricing {
    display: flex;
    align-items: baseline;
    gap: 8px;
    margin-bottom: 1rem;
  }

  .product .price-sale {
    font-size: 1.2rem;
    color: var(--text-dark);
    font-weight: bold;
  }

  .product .price-original {
    font-size: 0.9rem;
    color: var(--text-muted);
  }

  .product .price-original del {
    text-decoration: line-through;
    text-decoration-thickness: 2px;
  }

  .product .bottom-area {
    display: flex;
    gap: 0.5rem;
    margin-top: auto;
  }

  .product .bottom-area .btn {
    font-size: 14px;
    padding: 0.5rem;
    border-radius: 5px;
    flex: 1;
    transition: all 0.3s;
    text-align: center;
  }

  .product .bottom-area .btn-outline-primary {
    border-color: #007bff;
    color: #007bff;
  }

  .product .bottom-area .btn-outline-primary:hover:not(:disabled) {
    background: #007bff;
    color: #ffffff;
    border-color: #007bff;
  }

  .product .bottom-area .btn-outline-danger {
    border-color: #dc3545;
    color: #dc3545;
  }

  .product .bottom-area .btn-outline-danger:hover {
    background: #dc3545;
    color: #ffffff;
    border-color: #dc3545;
  }

  .product .bottom-area .btn:disabled {
    border-color: #6c757d;
    color: #6c757d;
    cursor: not-allowed;
  }

  @media (max-width: 768px) {
    .product-container {
      grid-template-columns: 1fr;
    }

    .product-gallery {
      position: static;
    }

    .main-image {
      aspect-ratio: 4 / 3;
    }

    .thumbnail img {
      width: 60px;
      height: 60px;
    }

    .product-info {
      padding: 1rem;
    }

    .product-title {
      font-size: 1.5rem;
    }

    .price-sale {
      font-size: 1.3rem;
    }

    .price-original {
      font-size: 1rem;
    }

    .col-sm-6 {
      flex: 0 0 50%;
    }

    .col-md-4, .col-lg-3 {
      flex: 0 0 50%;
    }
  }

  @media (max-width: 576px) {
    .product .offer-badge {
      font-size: 14px;
      padding: 6px;
    }

    .product .card-title {
      font-size: 1rem;
    }

    .product .price-sale {
      font-size: 1.1rem;
    }

    .product .price-original {
      font-size: 0.85rem;
    }
  }
</style>

<div class="product-page">
  <!-- Breadcrumbs -->
  <nav class="breadcrumb-links">
    <a href="/">Home</a> › <a href="/shop">Shop</a> › <span>Product Details</span>
  </nav>

  <div class="product-container">
    <!-- Product Gallery -->
    <div class="product-gallery">
      <div class="main-image">
        <img id="main-img" src="<%= product.productImage[0] %>" alt="<%= product.productName %>">
      </div>
      <div class="thumbnails">
        <% product.productImage.forEach((image, index) => { %>
          <div class="thumbnail <%= index === 0 ? 'active' : '' %>">
            <img src="<%= image %>" alt="Thumbnail <%= index + 1 %>" onclick="changeImage('<%= image %>')">
          </div>
        <% }) %>
      </div>
    </div>

    <!-- Product Info -->
  <div class="product-info">
  <h1 class="product-title"><%= product.productName %></h1>
  <p class="product-description">
    Discover the benefits of <%= product.productName %>. <%= product.description %>
  </p>
  <div class="product-specs">
    <div><strong>Brand:</strong> <span><%= product.brand && product.brand.brandName ? product.brand.brandName : 'Not specified' %></span></div>
    <div><strong>Skin Type:</strong> <span><%= product.skinType || 'Not specified' %></span></div>
    <div><strong>Skin Concern:</strong> <span><%= product.skinConcern || 'Not specified' %></span></div>
  </div>

      <!-- Rating -->
      <div class="rating">
        <span class="stars">
          <i class="fa fa-star"></i>
          <i class="fa fa-star"></i>
          <i class="fa fa-star"></i>
          <i class="fa fa-star"></i>
          <i class="fa fa-star-half-alt"></i>
        </span>
        <span>(4.5/5)</span>
      </div>

      <!-- Price & Offer -->
      <div class="price-container">
        <span class="price-sale">₹<%= product.salePrice.toFixed(2) %></span>
        <% if (product.maxOffer > 0) { %>
          <span class="price-original"><del>₹<%= product.regularPrice.toFixed(2) %></del></span>
        <% } %>
      </div>
      <% if (product.maxOffer > 0) { %>
        <span class="offer-text"><%= product.maxOffer %>% <%= product.offerSource %></span>
      <% } %>

      <!-- Stock Status -->
      <p class="stock-status">
        <% if (product.quantity > 0) { %>
          <span class="in-stock">In Stock</span> <span>(<%= product.quantity %> left)</span>
        <% } else { %>
          <span class="out-of-stock">Out of Stock</span>
        <% } %>
      </p>

      <!-- Buttons -->
      <div class="buttons">
        <% if (product.quantity > 0) { %>
          <form id="add-to-cart-form" style="display: inline;">
            <input type="hidden" name="productId" value="<%= product._id %>">
            <input type="hidden" name="quantity" value="1">
            <button type="submit" class="add-to-cart">
              <i class="fas fa-shopping-cart"></i> Add to Cart
            </button>
          </form>
        <% } else { %>
          <button class="add-to-cart" disabled>
            <i class="fas fa-shopping-cart"></i> Out of Stock
          </button>
        <% } %>
        <button class="wishlist" onclick="addToWishlist('<%= product._id %>')">
          <i class="fas fa-heart"></i> Add to Wishlist
        </button>
      </div>

      <!-- Reviews -->
      <div class="reviews">
        <h3>Customer Reviews</h3>
        <div class="review">
          <strong>Ayesha R.</strong>
          <p>★★★★★ - Leaves my skin feeling soft and glowing! Highly recommend for daily use.</p>
        </div>
        <div class="review">
          <strong>Neha S.</strong>
          <p>★★★★ - Great product, natural fragrance is amazing. Works well for sensitive skin.</p>
        </div>
        <div class="review">
          <strong>Sneha P.</strong>
          <p>★★★★★ - Visible results in just a week! Totally loving it. Will order again.</p>
        </div>
      </div>
    </div>
  </div>
</div>

<section class="related-product-area">
  <div class="max-w-7xl mx-auto px-4">
    <h2 class="related-title">Explore Related Products</h2>
    <p class="related-subtitle">
      Discover more skincare solutions tailored to your needs, crafted with quality and care.
    </p>
    <% if (relatedProducts && relatedProducts.length > 0) { %>
      <div class="row">
        <% relatedProducts.forEach(product => { %>
          <div class="col-sm-6 col-md-4 col-lg-3 mb-4">
            <div class="product card h-100">
              <a href="/productDetails?id=<%= product._id %>" class="img-prod">
                <img class="card-img-top img-fluid" src="<%= product.productImage && product.productImage.length > 0 ? product.productImage[0] : '/images/default-product.jpg' %>" alt="<%= product.productName %>">
                <% if (product.maxOffer > 0) { %>
                  <span class="offer-badge"><%= product.offerSource %>: <%= product.maxOffer %>% OFF</span>
                <% } else if (product.quantity === 0) { %>
                  <span class="status badge out-of-stock">Out of Stock</span>
                <% } %>
                <div class="overlay"></div>
              </a>
              <div class="card-body d-flex flex-column">
                <div class="cat mb-2">
                  <span class="text-muted"><%= product.category && product.category.name ? product.category.name : 'Uncategorized' %></span>
                </div>
                <h3 class="card-title"><a href="/productDetails?id=<%= product._id %>"><%= product.productName %></a></h3>
                <div class="pricing mb-3">
                  <p class="price m-0">
                    <span class="price-sale">₹<%= product.salePrice.toFixed(2) %></span>
                    <% if (product.maxOffer > 0) { %>
                      <span class="price-original"><del>₹<%= product.regularPrice.toFixed(2) %></del></span>
                    <% } %>
                  </p>
                </div>
                <div class="bottom-area d-flex gap-2 mt-auto">
                  <form action="/add-to-cart-shop/<%= product._id %>" method="POST" style="display: inline;">
                    <button type="submit" class="btn btn-outline-primary flex-fill" <%= product.quantity === 0 ? 'disabled' : '' %>>
                      <span>Add to cart <i class="ion-ios-add ml-1"></i></span>
                    </button>
                  </form>
                  <button type="button" class="btn btn-outline-danger flex-fill" onclick="addToWishlist('<%= product._id %>')">
                    <i class="ion-ios-heart mr-1"></i> Wishlist
                  </button>
                </div>
              </div>
            </div>
          </div>
        <% }) %>
      </div>
    <% } %>
  </div>
</section>

<script>
  // Image Switching
  function changeImage(newSrc) {
    const mainImg = document.getElementById('main-img');
    mainImg.src = newSrc;
    document.querySelectorAll('.thumbnail').forEach(t => t.classList.remove('active'));
    event.target.parentElement.classList.add('active');
  }

  // Zoom Effect
  document.getElementById('main-img').addEventListener('mousemove', function (e) {
    const img = e.target;
    const { left, top, width, height } = img.getBoundingClientRect();
    const x = (e.clientX - left) / width * 100;
    const y = (e.clientY - top) / height * 100;
    img.style.transformOrigin = `${x}% ${y}%`;
  });

  // Thumbnail Interaction
  document.querySelectorAll('.thumbnail img').forEach(thumb => {
    thumb.addEventListener('click', () => {
      const mainImg = document.querySelector('.main-image img');
      mainImg.src = thumb.src;
      document.querySelectorAll('.thumbnail').forEach(t => t.classList.remove('active'));
      thumb.parentElement.classList.add('active');
    });
  });

  document.getElementById('add-to-cart-form')?.addEventListener('submit', async (e) => {
    e.preventDefault();
    const formData = new FormData(e.target);
    const productId = formData.get('productId');
    const quantity = parseInt(formData.get('quantity'));

    try {
      const response = await fetch('/add-to-cart', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ productId, quantity })
      });

      const data = await response.json();

      if (data.success) {
        Swal.fire({
          title: 'Product added to cart!',
          icon: 'success',
          showCancelButton: true,
          confirmButtonText: 'Go to Cart',
          cancelButtonText: 'Continue Shopping',
          confirmButtonColor: '#007bff'
        }).then((result) => {
          if (result.isConfirmed) {
            window.location.href = '/cart';
          }
        });
      } else if (data.error === 'out_of_stock') {
        Swal.fire({
          title: 'Out of stock!',
          text: data.message || 'Not enough stock available.',
          icon: 'error',
          confirmButtonColor: '#007bff'
        });
      } else if (data.error === 'max_limit') {
        Swal.fire({
          title: 'Maximum limit reached!',
          text: data.message || 'You can only add up to 5 of this item.',
          icon: 'warning',
          confirmButtonColor: '#007bff'
        });
      } else if (data.message === 'This item is already in your cart. You can update the quantity in your cart.') {
        Swal.fire({
          title: 'Item Already in Cart',
          text: data.message,
          icon: 'warning',
          confirmButtonColor: '#007bff'
        });
      } else if (data.message === 'User not logged in') {
        Swal.fire({
          title: 'Log In Required',
          text: 'Please log in to add items to your cart.',
          icon: 'warning',
          confirmButtonText: 'Log In',
          confirmButtonColor: '#007bff'
        }).then((result) => {
          if (result.isConfirmed) {
            window.location.href = '/login';
          }
        });
      } else {
        Swal.fire({
          title: 'Error',
          text: data.message || 'Failed to add product to cart.',
          icon: 'error',
          confirmButtonColor: '#007bff'
        });
      }
    } catch (error) {
      console.error('Error adding to cart:', error);
      Swal.fire({
        title: 'Error',
        text: 'Something went wrong. Please try again.',
        icon: 'error',
        confirmButtonColor: '#007bff'
      });
    }
  });

  async function addToWishlist(productId) {
    try {
      const response = await fetch('/addToWishlist', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ productId })
      });
      const result = await response.json();
      if (result.status === true) {
        Swal.fire({
          icon: 'success',
          title: 'Added to Wishlist',
          text: result.message || 'Product added to your wishlist!',
          confirmButtonColor: '#007bff'
        });
      } else {
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: result.message || 'Failed to add to wishlist',
          confirmButtonColor: '#007bff'
        });
      }
    } catch (error) {
      console.error('Error adding to wishlist:', error);
      Swal.fire({
        icon: 'error',
        title: 'Error',
        text: 'An error occurred while adding to wishlist',
        confirmButtonColor: '#007bff'
      });
    }
  }
</script>

<%- include('../partials/user/footer') %>