<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Wallet</title>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"/>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"/>
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap" rel="stylesheet"/>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <style>
    body {
      font-family: 'Poppins', sans-serif;
      overflow-x: hidden;
      background-color: #f3f4f6;
    }

    :root {
      --accent-gradient: linear-gradient(45deg, #44351c, #efe10a);
      --accent-hover: linear-gradient(45deg, #3a2e17, #d6cc09);
      --danger-color: #dc2626;
      --danger-hover: #b91c1c;
      --success-color: #16a34a;
      --success-hover: #13843b;
    }

    .btn-gradient {
      background: var(--accent-gradient);
      border: none;
      color: #ffffff;
      transition: all 0.3s ease;
    }

    .btn-gradient:hover {
      background: var(--accent-hover);
      box-shadow: 0 4px 10px rgba(68, 53, 28, 0.3);
    }

    .sidebar {
      height: 100vh;
      background: #ffffff;
      padding: 2rem 1.5rem;
      border-right: 1px solid #e5e7eb;
      position: fixed;
      top: 0;
      left: 0;
      width: 250px;
      transition: transform 0.3s ease;
    }

    .sidebar a {
      color: #1f2937;
      text-decoration: none;
      padding: 1rem;
      margin: 0.5rem 0;
      border-radius: 8px;
      transition: all 0.3s ease;
      display: flex;
      align-items: center;
      gap: 1rem;
    }

    .sidebar a:hover,
    .sidebar .active {
      background: var(--accent-gradient);
      color: #fff;
      transform: translateX(5px);
    }

    .sidebar i {
      width: 25px;
      text-align: center;
    }

    .sidebar-toggle {
      display: none;
      position: fixed;
      top: 1rem;
      left: 1rem;
      z-index: 60;
      background: linear-gradient(90deg, #7e6b00, #a68c00);
      color: #fff;
      padding: 0.6rem;
      border-radius: 8px;
      border: none;
      box-shadow: 0 2px 6px rgba(126, 107, 0, 0.2);
      transition: all 0.3s ease;
      cursor: pointer;
    }

    .sidebar-toggle:hover {
      background: linear-gradient(90deg, #655700, #8c7500);
      box-shadow: 0 4px 10px rgba(126, 107, 0, 0.3);
    }

    .sidebar-toggle svg {
      width: 20px;
      height: 20px;
      fill: #fff;
    }

    .main-content {
      background: linear-gradient(145deg, #ffffff, #f5f5f5);
      border: none;
      border-radius: 12px;
      padding: 2rem;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
      transition: margin-left 0.3s ease, box-shadow 0.3s ease;
      will-change: transform;
      position: relative;
      max-width: min(100%, 900px);
      margin: 0 auto;
      margin-top: 4vh;
      min-height: calc(92vh - 2rem);
      box-sizing: border-box;
    }

    .main-content:hover {
      box-shadow: 0 6px 16px rgba(126, 107, 0, 0.15);
    }

    .wallet-card {
      border: 1px solid #e5e7eb;
      border-radius: 12px;
      background: var(--accent-gradient);
      color: white;
      padding: 1.5rem;
      margin-bottom: 1.5rem;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
      transition: box-shadow 0.3s ease;
      width: 250px;
    }

    .wallet-card:hover {
      box-shadow: 0 6px 16px rgba(126, 107, 0, 0.15);
    }

    .transaction-card {
      border: 1px solid #e5e7eb;
      border-radius: 12px;
      background: #ffffff;
      margin-bottom: 1.5rem;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
      transition: box-shadow 0.3s ease;
    }

    .transaction-card:hover {
      box-shadow: 0 6px 16px rgba(126, 107, 0, 0.15);
    }

    .transaction-header {
      background: black;
      padding: 1rem;
      color: #ffffff;
      border-top-left-radius: 12px;
      border-top-right-radius: 12px;
      height: 48px;
    }

    .transaction-body {
      padding: 1.5rem;
    }

    .status-badge {
      padding: 0.3rem 0.6rem;
      border-radius: 12px;
      font-size: 0.8rem;
      color: #fff;
    }

    .pagination-container {
      display: flex;
      justify-content: center;
      align-items: center;
      gap: 1rem;
      padding: 1.5rem 0;
    }

    .pagination-container a {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      padding: 0.5rem;
      border-radius: 0.375rem;
      transition: all 0.3s ease;
      text-decoration: none;
      min-width: 2.25rem;
      height: 2.25rem;
    }

    .pagination-container a.nav-button {
      background: var(--accent-gradient);
      color: #ffffff;
    }

    .pagination-container a.nav-button:hover:not(.disabled) {
      background: var(--accent-hover);
      box-shadow: 0 4px 10px rgba(68, 53, 28, 0.3);
    }

    .pagination-container a.disabled {
      background-color: #d1d5db;
      color: #9ca3af;
      cursor: not-allowed;
      pointer-events: none;
    }

    .pagination-container .page-indicator {
      font-size: 0.875rem;
      color: #374151;
      font-weight: 500;
    }

    @media (max-width: 576px) {
      .pagination-container {
        gap: 0.5rem;
        padding: 1rem 0;
      }

      .pagination-container a {
        min-width: 2rem;
        height: 2rem;
        padding: 0.25rem;
      }

      .pagination-container .page-indicator {
        font-size: 0.75rem;
      }
    }

    .table th {
      cursor: pointer;
      color: #1f2937;
      padding: 0.75rem;
    }

    .table th:hover {
      background-color: #f1f5f9;
    }

    .type-credit {
      color: #16a34a;
      font-weight: 500;
    }

    .type-debit {
      color: #dc2626;
      font-weight: 500;
    }

    @media (max-width: 768px) {
      .sidebar {
        width: min(220px, 70vw);
        transform: translateX(-100%);
      }

      .sidebar.open {
        transform: translateX(0);
      }

      .sidebar-toggle {
        display: block;
      }

      .sidebar-partial.open ~ .sidebar-toggle {
        display: none;
      }

      .main-content {
        margin: 0 auto;
        padding: 1.5rem;
        border-radius: 10px;
        margin-top: 10vh;
        min-height: calc(90vh - 2rem);
        max-width: min(100%, 800px);
      }

      .main-content.sidebar-open {
        margin-left: min(220px, 70vw);
        max-width: min(100%, 800px);
      }

      .table-responsive {
        font-size: 0.9rem;
      }
    }

    @media (max-width: 480px) {
      .main-content {
        padding: 1rem;
        border-radius: 8px;
        margin-top: 8vh;
        min-height: calc(88vh - 2rem);
        max-width: min(100%, 800px);
      }

      .main-content.sidebar-open {
        margin-left: min(180px, 65vw);
        max-width: min(100%, 800px);
      }

      .sidebar-toggle {
        padding: 0.5rem;
      }

      .sidebar-toggle svg {
        width: 18px;
        height: 18px;
      }
    }

    @media (max-width: 320px) {
      .main-content {
        padding: 0.8rem;
        border-radius: 6px;
        max-width: min(100%, 800px);
      }

      .main-content.sidebar-open {
        margin-left: min(160px, 60vw);
        max-width: min(100%, 800px);
      }
    }
  </style>
</head>
<body>
  <%- include("../partials/user/sidebar.ejs") %>

  <button class="sidebar-toggle" aria-label="Toggle sidebar">
    <svg viewBox="0 0 24 24" aria-hidden="true">
      <path d="M3 6h18v2H3V6zm0 5h18v2H3v-2zm0 5h18v2H3v-2z"/>
    </svg>
  </button>

  <div class="main-content mx-auto p-6">
    <div class="flex flex-col items-center mb-6">
      <h2 class="text-2xl font-bold text-gray-800 text-center">Your Wallet</h2>
    </div>

    <% if (error) { %>
      <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-6" role="alert">
        <%= error %>
      </div>
    <% } %>

    <% if (!wallet || wallet.balance === undefined) { %>
      <div class="text-center py-5">
        <div class="mb-4">
          <i class="fas fa-wallet fa-3x text-gray-400"></i>
        </div>
        <h3 class="text-xl font-semibold text-gray-800">No wallet activity yet</h3>
        <p class="text-gray-600">When you add funds or make transactions, they will appear here.</p>
        <a href="/shop" class="btn-gradient px-4 py-2 rounded text-white mt-4">Start Shopping</a>
      </div>
    <% } else { %>
      <!-- Wallet Balance Card -->
      <div class="wallet-card">
        <div class="flex justify-between items-center">
          <div>
            <h4 class="text-lg font-semibold ">Wallet Balance</h4>
            <p class="text-3xl font-bold ">â‚¹<%= wallet.balance.toFixed(2) %></p>
          </div>
        </div>
      </div>

      <!-- Transaction History -->
      <div class="transaction-card">
        <div class="transaction-header">
          <h5 class="text-lg font-bold">Transaction History</h5>
        </div>
        <div class="transaction-body">
          <% if (!wallet.transactions || wallet.transactions.length === 0) { %>
            <div class="text-center py-3">
              <p class="text-gray-600">No transactions yet.</p>
            </div>
          <% } else { %>
            <div class="table-responsive">
              <table class="table table-hover mb-0">
                <thead>
                  <tr>
                    <th scope="col" onclick="sortTable(0)">Date</th>
                    <th scope="col" onclick="sortTable(1)">Type</th>
                    <th scope="col" onclick="sortTable(2)">Amount</th>
                    <th scope="col">Description</th>
                    <th scope="col" onclick="sortTable(4)">Status</th>
                  </tr>
                </thead>
                <tbody id="transaction-table-body">
                  <% wallet.transactions.forEach(transaction => { %>
                    <tr>
                      <td><%= new Date(transaction.date).toLocaleDateString('en-IN', { day: 'numeric', month: 'short', year: 'numeric' }) %></td>
                      <td class="<%= transaction.type === 'Credit' ? 'type-credit' : 'type-debit' %>">
                        <%= transaction.type %>
                      </td>
                      <td>â‚¹<%= transaction.amount.toFixed(2) %></td>
                      <td><%= transaction.description || 'N/A' %></td>
                      <td>
                        <span class="status-badge 
                          <%= transaction.status === 'Completed' ? 'bg-success' : 'bg-warning' %>">
                          <%= transaction.status %>
                        </span>
                      </td>
                    </tr>
                  <% }) %>
                </tbody>
              </table>
            </div>

            <!-- Pagination -->
            <nav class="pagination-container" role="navigation" aria-label="Pagination">
              <% if (totalPages > 1) { %>
                <!-- Left Arrow (Previous) -->
                <a 
                  href="<%= currentPage > 1 ? `${baseUrl}?page=${currentPage - 1}${queryParams}` : '#' %>" 
                  class="nav-button <%= currentPage === 1 ? 'disabled' : '' %>"
                  aria-label="Previous page"
                  <%= currentPage === 1 ? 'aria-disabled="true"' : '' %>
                >
                  <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
                  </svg>
                </a>

                <!-- Page Indicator -->
                <span class="page-indicator">
                  Page <%= currentPage %> of <%= totalPages %>
                </span>

                <!-- Right Arrow (Next) -->
                <a 
                  href="<%= currentPage < totalPages ? `${baseUrl}?page=${currentPage + 1}${queryParams}` : '#' %>" 
                  class="nav-button <%= currentPage === totalPages ? 'disabled' : '' %>"
                  aria-label="Next page"
                  <%= currentPage === totalPages ? 'aria-disabled="true"' : '' %>
                >
                  <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                  </svg>
                </a>
              <% } %>
            </nav>
          <% } %>
        </div>
      </div>
    <% } %>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    // Sidebar toggle
    document.addEventListener('DOMContentLoaded', () => {
      const toggleButton = document.querySelector('.sidebar-toggle');
      const sidebar = document.querySelector('.sidebar-partial');
      const mainContent = document.querySelector('.main-content');

      // Ensure sidebar is hidden and toggle is visible on load for mobile
      if (window.innerWidth <= 768) {
        sidebar.classList.remove('open');
        mainContent.classList.remove('sidebar-open');
        toggleButton.style.display = 'block';
      }

      // Toggle sidebar open
      if (toggleButton && sidebar && mainContent) {
        toggleButton.addEventListener('click', () => {
          sidebar.classList.add('open');
          mainContent.classList.add('sidebar-open');
          toggleButton.style.display = 'none';
        });
      }

      // Handle window resize
      window.addEventListener('resize', () => {
        if (window.innerWidth > 768) {
          sidebar.classList.remove('open');
          mainContent.classList.remove('sidebar-open');
          toggleButton.style.display = 'none';
        } else {
          if (!sidebar.classList.contains('open')) {
            toggleButton.style.display = 'block';
          }
        }
      });
    });

    // Transaction table sorting and pagination
    let transactions = <%- JSON.stringify(wallet && wallet.transactions ? wallet.transactions : []) %>;
    let currentPage = <%= currentPage || 1 %>;
    let rowsPerPage = 5;
    let sortColumn = 0;
    let sortDirection = -1;

    function sortTable(column) {
      if (sortColumn === column) {
        sortDirection *= -1;
      } else {
        sortColumn = column;
        sortDirection = column === 0 ? -1 : 1;
      }

      const keys = ['date', 'type', 'amount', null, 'status'];
      transactions.sort((a, b) => {
        let valueA = a[keys[column]];
        let valueB = b[keys[column]];

        if (column === 0) {
          valueA = new Date(valueA);
          valueB = new Date(valueB);
        } else if (column === 2) {
          valueA = parseFloat(valueA);
          valueB = parseFloat(valueB);
        } else if (column === 1 || column === 4) {
          valueA = valueA.toLowerCase();
          valueB = valueB.toLowerCase();
        }

        if (valueA < valueB) return -sortDirection;
        if (valueA > valueB) return sortDirection;
        return 0;
      });

      renderTable();
    }

    function renderTable() {
      const tbody = document.getElementById('transaction-table-body');
      if (!tbody) return;

      transactions.sort((a, b) => new Date(b.date) - new Date(a.date));

      const start = (currentPage - 1) * rowsPerPage;
      const end = start + rowsPerPage;
      const paginatedTransactions = transactions.slice(start, end);

      tbody.innerHTML = '';
      paginatedTransactions.forEach(transaction => {
        const tr = document.createElement('tr');
        tr.innerHTML = `
          <td>${new Date(transaction.date).toLocaleDateString('en-IN', { day: 'numeric', month: 'short', year: 'numeric' })}</td>
          <td class="${transaction.type === 'Credit' ? 'type-credit' : 'type-debit'}">${transaction.type}</td>
          <td>â‚¹${transaction.amount.toFixed(2)}</td>
          <td>${transaction.description || 'N/A'}</td>
          <td><span class="status-badge ${transaction.status === 'Completed' ? 'bg-success' : 'bg-warning'}">${transaction.status}</span></td>
        `;
        tbody.appendChild(tr);
      });
    }

    if (transactions.length > 0) {
      renderTable();
    }
  </script>
</body>
</html>