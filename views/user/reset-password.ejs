<section class="content-main">
    <div class="card mx-auto card-login">
        <div class="card-body">
            <h4 class="card-title">Change Password</h4>
            <form method="post" action="/reset-password" id="changePasswordForm">
                <div class="form-group">
                    <input class="form-control" name="newPass1" id="newPass1" placeholder="New password" type="password" required autocomplete="new-password">
                    <div id="newPass1Error" class="error-message">Password must be at least 8 characters long and contain at least one number.</div>
                </div>
                <div class="form-group">
                    <input class="form-control" name="newPass2" id="newPass2" placeholder="Confirm new password" type="password" required autocomplete="new-password">
                    <div id="newPass2Error" class="error-message">Passwords do not match.</div>
                </div>
                <div class="form-group">
                    <button type="submit" class="btn btn-primary" id="submitBtn" disabled>Change Password</button>
                </div>
                <% if (locals.message && message.length > 0) { %>
                    <div id="alertMessage" class="alert-danger">
                        <%= message %>
                    </div>
                <% } %>
            </form>
            <p class="text-center">Don't have an account? <a href="/signup">Sign up</a></p>
        </div>
    </div>
</section>

<style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: 'Nunito Sans', sans-serif;
    }
    body {
        display: flex;
        height: 100vh;
        background-color: #f3f5f6;
        overflow: auto;
    }
    .content-main {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 100%;
        padding: 30px;
    }
    .card-login {
        background-color: white;
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        width: 100%;
        max-width: 500px;
        padding: 30px;
    }
    .card-title {
        font-size: 24px;
        margin-bottom: 20px;
        color: #333;
        text-align: center;
        font-weight: 700;
    }
    .form-group {
        margin-bottom: 15px;
        position: relative;
    }
    .form-control {
        width: 100%;
        padding: 12px;
        border: 1px solid #ddd;
        border-radius: 4px;
        font-size: 16px;
    }
    .form-control:focus {
        border-color: #2c3e50;
        outline: none;
    }
    .form-control.error {
        border-color: #d9534f;
    }
    .form-control.valid {
        border-color: #28a745;
    }
    .btn-primary {
        width: 100%;
        padding: 12px;
        background-color: #2c3e50;
        color: white;
        border: none;
        border-radius: 4px;
        font-size: 16px;
        cursor: pointer;
    }
    .btn-primary:hover {
        background-color: #34495e;
    }
    .btn-primary:disabled {
        background-color: #6c757d;
        cursor: not-allowed;
    }
    .error-message {
        color: #d9534f;
        font-size: 14px;
        margin-top: 6px;
        text-align: left;
        display: none;
    }
    .alert-danger {
        color: #d9534f;
        background-color: #f2dede;
        border: 1px solid #d9534f;
        padding: 10px;
        border-radius: 4px;
        text-align: center;
        font-size: 14px;
        margin-top: 15px;
    }
    .text-center {
        text-align: center;
        margin-top: 15px;
        font-size: 14px;
        color: #6c757d;
    }
    .text-center a {
        color: #2c3e50;
        text-decoration: none;
    }
    .text-center a:hover {
        text-decoration: underline;
    }
    @media (max-width: 480px) {
        .card-login {
            max-width: 90%;
            padding: 25px;
        }
        .card-title {
            font-size: 22px;
        }
        .form-control,
        .btn-primary {
            font-size: 15px;
            padding: 10px;
        }
        .error-message,
        .alert-danger {
            font-size: 13px;
        }
    }
</style>

<script>
    const form = document.getElementById('changePasswordForm');
    const passwordInput = document.getElementById('newPass1');
    const confirmPasswordInput = document.getElementById('newPass2');
    const passwordError = document.getElementById('newPass1Error');
    const confirmPasswordError = document.getElementById('newPass2Error');
    const submitBtn = document.getElementById('submitBtn');

    let isPasswordValid = false;
    let isConfirmPasswordValid = false;

    function validatePassword() {
        const password = passwordInput.value;
        const passwordRegex = /^(?=.*\d).{8,}$/;
        isPasswordValid = passwordRegex.test(password);
        if (password === '') {
            passwordInput.classList.remove('error', 'valid');
            passwordError.style.display = 'none';
        } else if (isPasswordValid) {
            passwordInput.classList.remove('error');
            passwordInput.classList.add('valid');
            passwordError.style.display = 'none';
        } else {
            passwordInput.classList.remove('valid');
            passwordInput.classList.add('error');
            passwordError.style.display = 'block';
        }
        validateConfirmPassword();
        updateSubmitButton();
    }

    function validateConfirmPassword() {
        const password = passwordInput.value;
        const confirmPassword = confirmPasswordInput.value;
        isConfirmPasswordValid = password === confirmPassword && isPasswordValid;
        if (confirmPassword === '') {
            confirmPasswordInput.classList.remove('error', 'valid');
            confirmPasswordError.style.display = 'none';
        } else if (isConfirmPasswordValid) {
            confirmPasswordInput.classList.remove('error');
            confirmPasswordInput.classList.add('valid');
            confirmPasswordError.style.display = 'none';
        } else {
            confirmPasswordInput.classList.remove('valid');
            confirmPasswordInput.classList.add('error');
            confirmPasswordError.style.display = 'block';
        }
        updateSubmitButton();
    }

    function updateSubmitButton() {
        submitBtn.disabled = !(isPasswordValid && isConfirmPasswordValid);
    }

    passwordInput.addEventListener('input', validatePassword);
    confirmPasswordInput.addEventListener('input', validateConfirmPassword);

    form.addEventListener('submit', (e) => {
        if (!isPasswordValid || !isConfirmPasswordValid) {
            e.preventDefault();
            Swal.fire({
                icon: 'error',
                title: 'Invalid Input',
                text: 'Please correct the errors in the form before submitting.',
            });
        }
    });
</script>